name: CI

on:
  push:
    branches:
    - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      matrix: ${{ steps.matrix.outputs.targets }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup matrix
      id: matrix
      run: echo "targets=$(make matrix)" >> $GITHUB_OUTPUT
  build:
    needs: [setup]
    strategy:
      matrix:
        target: ${{ fromJson(needs.setup.outputs.matrix) }}
    env:
      DISTRIB:  ${{ matrix.target.distrib }}
      RELEASE:  ${{ matrix.target.release }}
      CODENAME: ${{ matrix.target.codename }}
    name: build:${{ matrix.target.distrib }}:${{ matrix.target.codename }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup secrets
      run: mkdir -m 0700 secret
    - name: Import GPG passphrase
      run: echo -n "${{ secrets.GPG_PASSPHRASE }}" | base64 -d > secret/passphrase
    - name: Import GPG signing key
      run: echo -n "${{ secrets.GPG_SIGNING_KEY }}" > secret/secret.gpg.asc
    - name: Download source
      run: make download
    - name: Extract archive
      run: make extract
    - name: Build docker
      run: make docker-build
    - name: Build artifact
      run: make build
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.target.distrib }}-${{ matrix.target.codename }}-deb
        path: build/target/debian/*.deb
        retention-days: 30
        if-no-files-found: error
  timeline:
    needs: [build]
    name: timeline
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
    - name: Timeline
      uses: Kesin11/actions-timeline@v1
